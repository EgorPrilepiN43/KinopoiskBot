# -*- coding: utf-8 -*-
"""ALLRealBot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V608LWBG4403BSM3iVgp46JAoqjaCiL_
"""

!pip install pyTelegramBotApi

"""#bot"""

import requests
from urllib.parse import urlencode, quote_plus

class Kinopoisk():
	def __init__(self, api_key):
		self.keywords = None
		self.headers = {'accept': 'application/json', 'X-API-KEY': api_key}
		self.host = 'https://kinopoiskapiunofficial.tech'
		self.path = None
		self.method = None
		self.params = {}

	def search(self, text, film = True, actor = False):
		if actor:
			return self.search_actor(text)
		elif film:
			return self.search_film(text)

	def search_actor(self, text):
		person = self.get_person(text)

		if person and len(person['items']):
			url = {}
			url['path'] = '/api/v1/'
			url['method'] = 'staff/' + str(person['items'][0]['kinopoiskId'])
			url['params'] = None
			actor = self._request(url)
			# print(actor)
			films = []
			for i in actor.get('films')[0:5]:
				if i.get('nameRu'):
					films.append(i.get('nameRu') + " (" + str(i.get('rating', '-')) + ")")
				# films.append(i['nameRu'])

			obj = {
				'id': str(actor.get('personId','-')),
				'name': str(actor.get('nameRu','-')),
				'films': films,
				'posterUrl': str(actor.get('posterUrl','-')),
				'kinlink': str(actor.get('webUrl','-'))
			}
		else:
			obj = None
		return obj

	def search_film(self, text):
		film = self.get_film(text)
		count = self.get_film_count(text)
		# print(count)
		if film:
			staff = self.get_staff(film['filmId'])
			director = self.get_director(staff)
			actors = self.get_actors(staff)

			obj = {
				'count': count,
				'id': film['filmId'],
				'name': film.get('nameRu', film['nameEn']),
				'year': film['year'],
				'country': self.get_country(film['countries']),
				'rating': film.get('rating'),
				'director': director,
				'actors': actors,
				'description': film.get('description'),
				'link': 'https://www.kinopoisk.ru/film/' + str(film['filmId']),
				'photo': film['posterUrl']
			}
		else:
			obj = None
		return obj

	def _request(self, url):
		if url['params']:
			url_str = self.host + url['path'] + url['method'] + "?" + urlencode(url['params'])
		else:
			url_str = self.host + url['path'] + url['method']

		res = requests.get(url_str, headers = self.headers)
		return res.json()

	def get_film(self, film_name):
		url = {}
		url['path'] = '/api/v2.1/films/'
		url['method'] = 'search-by-keyword'
		url['params'] = {'keyword': film_name, 'page': '1'}
		result = self._request(url)
		return result['films'][0] if len(result['films']) else None

	def get_film_count(self, film_name):
		url = {}
		url['path'] = '/api/v2.2/'
		url['method'] = 'films'
		url['params'] = {'order': 'RATING', 'type': 'ALL', 'ratingFrom': '0', 'ratingTo': '10', 'yearFrom': '1000', 'yearTo': '3000', 'keyword': film_name}
		result = self._request(url)
		print(result)
		return len(result['items'])

	def get_staff(self, film_id):
		url = {}
		url['path'] = '/api/v1/'
		url['method'] = 'staff'
		url['params'] = {'filmId': int(film_id)}
		result = self._request(url)
		return result if result else None

	def get_person(self, name):
		url = {}
		url['path'] = '/api/v1/'
		url['method'] = 'persons'
		url['params'] = {'name': name}
		result = self._request(url)
		return result if result else None

	def get_country(self, countries):
		lst_country = []
		for c in countries:
			lst_country.append(c.get('country'))
		return lst_country if lst_country else None

	def get_director(self, staff):
		director = None
		for s in staff:
			if s['professionKey'] == 'DIRECTOR':
				director = s.get('nameRu')
				break
		return director if director else None

	def get_actors(self, staff):
		actors = []
		cnt = 6
		for s in staff:
			if s['professionKey'] == 'ACTOR' and cnt:
				actors.append(s.get('nameRu'))
				cnt -= 1
		return actors if actors else None

import requests
from urllib.parse import urlencode, quote_plus
import telebot
from telebot import types
import pandas as pd
import re
import random

helper = '/start-- –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞\n\n–ö–Ω–æ–ø–∫–∏  ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n‚óè  –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω!\n‚óè  C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª--–µ—Å–ª–∏ –≤–∞–º –Ω–µ—á–µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è\n‚óè  –ê–∫—Ç–µ—Ä--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –ê–∫—Ç–µ—Ä/–ê–∫—Ç—Ä–∏—Å—Å—É, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω\n‚óè  –°–ª—É—á–∞–π–Ω—ã–π –ê–∫—Ç–µ—Ä--–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º –ê–∫—Ç–µ—Ä–æ–º/–ê–∫—Ç—Ä–∏—Å—Å–æ–π, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ñ–∏–ª—å–º—ã —Å –∏—Ö —É—á–∞—Å—Ç–∏–µ–º!'
qq = 'üé¨ *–ö–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã –Ω–∞ ¬´–ö–∏–Ω–æ–ü–æ–∏—Å–∫–µ¬ª*\n\n1Ô∏è‚É£ –ó–∞—Ö–æ–¥–∏–º –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç ¬´–ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞¬ª.\n2Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n3Ô∏è‚É£ –ü–æ—Å–ª–µ ¬´www.¬ª –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –º–µ–Ω—è–µ–º "kino" –Ω–∞ "ss".\n‚îî–î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è —Ç–∞–∫ ‚Äî ¬´sspoisk¬ª.\n4Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ –∞–¥—Ä–µ—Å—É ‚Üí –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–µ—Ä.'

data = pd.read_csv('/content/drive/MyDrive/TELEBOT/Flicks_Bot/kinopoisk-top250.csv', sep=',')
client = telebot.TeleBot('..........')

kino = Kinopoisk('4161ef6d-9f70-4103-918e-84efc60ec86e')
# film = kino.search("–ú–∞—Ç—Ä–∏—Ü–∞")
# actor = kino.search("–ö–∏–∞–Ω—É –†–∏–≤–∑", actor=True)
# print(film, actor)

def clear_msg(text):
	text = text.replace(' ', '').lower()
	text = text.replace(';', '')
	text = text.replace(',', '')
	text = text.replace('—ë', '–µ')
	text = text.replace('–Å', '–µ')
	return text


def clean_link(link):
	link = link.replace("'", '')
	return link





#                                                 –ü–†–ò–í–ï–¢–°–¢–í–ò–ï+–î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–ù–û–ü–û–ö

@client.message_handler(func=lambda c: c.text == '/start')
def start(message):
	mess=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?!'
	client.send_message(message.chat.id, mess, parse_mode='html')
	markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
	btn_start=types.InlineKeyboardButton('/start')
	btn_movie_ser=types.InlineKeyboardButton('–§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª')
	btn_rnd_movie=types.InlineKeyboardButton('C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª')
	btn_rnd_actor=types.InlineKeyboardButton('C–ª—É—á–∞–π–Ω—ã–π –∞–∫—Ç–µ—Ä')
	btn_actor=types.InlineKeyboardButton('–ê–∫—Ç–µ—Ä')
	KPoisk=types.InlineKeyboardButton('–ö–∞–∫ —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ???')
	FF=types.InlineKeyboardButton('–ö–∞–Ω–∞–ª —Å–æ–æ–±—â–µ—Å—Ç–≤–∞')
	markup.add(btn_movie_ser, btn_actor)
	markup.add(btn_rnd_movie, btn_rnd_actor)
	markup.add(FF)
	markup.row(KPoisk)
	client.send_message(message.chat.id, 'üëã', reply_markup=markup)

#                                                –§–£–ù–ö–¶–ò–Ø(–ö–ù–û–ü–ö–ê) –†–ê–ù–î–û–ú–ù–´–ô –§–ò–õ–¨–ú
@client.message_handler(func=lambda c: c.text == "C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª")
def rand(message):
	name = random.choice(data['movie'])
	for i in range(len(data)):
		if clear_msg(name) == clear_msg(data['movie'][i]):
			client.send_message(message.chat.id, f"‚óè  –ù–∞–∑–≤–∞–Ω–∏–µ: [{data.loc[i][1].replace(';', ',')}]({clean_link(data.loc[i][9])})\n‚óè  –ì–æ–¥: {data.loc[i][2]}\n‚óè  –°—Ç—Ä–∞–Ω–∞: {data.loc[i][3]}\n‚óè  –†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}\n‚óè  –†–µ–∂–∏—Å—Å–µ—Ä: {data.loc[i][6].replace(';', ',')}\n‚óè  –û–ø–µ—Ä–∞—Ç–æ—Ä: {data.loc[i][7].replace(';', ',')}\n‚óè  –ê–∫—Ç–µ—Ä—ã: {data.loc[i][8].replace(';', ',')}\n‚óè  –û–ø–∏—Å–∞–Ω–∏–µ: {data.loc[i][5].replace(';', '')}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: https://www.kinopoisk.ru/film/{re.sub('[^0-9]', '', data.loc[i][9].replace('_', ' '))[3:]} ", parse_mode='Markdown')



#                      –†–ê–ù–î–û–ú–ù–´–ï –ê–ö–¢–ï–†–´
@client.message_handler(func=lambda c: c.text == "–ö–∞–∫ —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ???")
def kino(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEXjJiSwfIw1ah_TA_UvVJpESIffzeoQACOwMAArVx2gYYSwbSVVPLRCME')      # –ò–°–ü–†–ê–í–¨
	client.send_message(message.chat.id, qq)

@client.message_handler(func=lambda c: c.text == "–§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª")
def film_ser(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYgABYkyX0Kr38I_YdHOwiricZqzI4MoAAvgSAAJCTllKAAFziHtpqojNIwQ')
	client.send_message(message.chat.id, '–ü—Ä–∏–≥–æ—Ç–æ–≤—å –≤–∫—É—Å–Ω—è—à–µ–∫!\n–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞...\n‚¨áÔ∏è‚¨áÔ∏è‚¨á')       # –ò–°–ü–†–ê–í–¨

@client.message_handler(func=lambda c: c.text == "/help")
def help(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEXqhiSxYKOT32r_p8GIlLxTkee_QCQgACJyAAAulVBRjTVPZqymtoFyME')       # –ò–°–ü–†–ê–í–¨ –ò –¢–ï–ö–°–¢ –í –°–¢–†–û–ß–ö–ï 50 –¢–û–ñ–ï –°–ö–û–ü–ò–†–£–ô
	client.send_message(message.chat.id, '–ó–∞–ø—É—Ç–∞–ª–∏—Å—å –≤ –∫–Ω–æ–ø–∫–∞—Ö?\n\n‚óè  –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω!\n‚óè  C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª--–µ—Å–ª–∏ –≤–∞–º –Ω–µ—á–µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è.\n‚óè  –ê–∫—Ç–µ—Ä--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –ê–∫—Ç–µ—Ä–∞/–ê–∫—Ç—Ä–∏—Å—Å—É, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω.\n‚óè  –°–ª—É—á–∞–π–Ω—ã–π –ê–∫—Ç–µ—Ä--–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º –ê–∫—Ç–µ—Ä–æ–º/–ê–∫—Ç—Ä–∏—Å—Å–æ–π, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ñ–∏–ª—å–º—ã —Å –∏—Ö —É—á–∞—Å—Ç–∏–µ–º!')


@client.message_handler(func=lambda c: c.text == "–ö–∞–Ω–∞–ª —Å–æ–æ–±—â–µ—Å—Ç–≤–∞")
def chan(message):
	client.send_message(message.chat.id, ' @flicksbar ')


@client.message_handler(func=lambda c: c.text == "–ï–≥–æ—Ä –ü—Ä–∏–ª–µ–ø–∏–Ω")
def EP(message):
	client.send_message(message.chat.id, ' –¢–û–ü ')


# @client.message_handler(func=lambda c: c.text == "–ê–Ω–¥—Ä–µ–π –¢–µ–ø–ª–æ–≤")
# def ANDR(message):
# 	client.send_message(message.chat.id, ' @openeyes_ai_bot ')

@client.message_handler(func=lambda c: c.text == "–ê–≤—Ç–æ—Ä—ã")
def author(message):
	client.send_message(message.chat.id, '–ö–æ–º–ø–∞–Ω–∏—è DataNateLab\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å ‚§µ\n@rfs910 –∏–ª–∏ @egorprileppa')


@client.message_handler(func=lambda c: c.text == "C–ª—É—á–∞–π–Ω—ã–π –∞–∫—Ç–µ—Ä")
def acrtist(message):
	st_act = []
	for i in range(len(data)):
		st_act.append(data['actors'][i].split(';'))
	set_actors = list(set([x for l in st_act for x in l]))
	act = random.choice(set_actors)
	actor = f"–§–∏–ª—å–º—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∏–≥—Ä–∞–ª(–∞) {act}\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è"
	client.send_message(message.chat.id, actor, parse_mode='html')
	for i in range(len(data)):
		if clear_msg(act) in clear_msg(data['actors'][i]):
			client.send_message(message.chat.id,
			                    f"–ù–∞–∑–≤–∞–Ω–∏–µ: {data.loc[i][1].replace(';', ',')}\n–†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}")


@client.message_handler(func=lambda c: c.text == "–ê–∫—Ç–µ—Ä")
def acrtist__1(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYadiTH_B6nbGGJCzxkPXPqbSlieFxgACQQIAAs4XpwuAhLkjXAPfNSME')
	what_actor = '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∞–∫—Ç–µ—Ä–∞/–∞–∫—Ç—Ä–∏—Å—ã...\n‚¨áÔ∏è‚¨áÔ∏è‚¨á'
	client.send_message(message.chat.id, what_actor, parse_mode='html')


#                                                         –†–ê–°–ü–û–ó–ù–û–í–ê–ù–ò–ï –§–ò–õ–¨–ú–û–í

@client.message_handler(content_types=["text"])
def start(message):
	found = False
	kino = Kinopoisk('4161ef6d-9f70-4103-918e-84efc60ec86e')
	film = kino.search(message.text)

	if film and film['count']:
		found = True
		client.send_message(message.chat.id, '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫...')
		client.send_message(message.chat.id,
		                    f"‚óè  –ù–∞–∑–≤–∞–Ω–∏–µ: [{film['name']}]({film['photo']})\n‚óè  –ì–æ–¥: {film['year']}\n‚óè  –°—Ç—Ä–∞–Ω–∞: {', '.join(film['country'])}\n‚óè  –†–µ–π—Ç–∏–Ω–≥: {film['rating']}\n‚óè  –†–µ–∂–∏—Å—Å–µ—Ä: {film['director']}\n‚óè  –ê–∫—Ç–µ—Ä—ã: {', '.join(film['actors'])}\n‚óè  –û–ø–∏—Å–∞–Ω–∏–µ: {film['description']}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {film['link']}",
		                    parse_mode='Markdown')
	# print(*film['actors'],sep=', ')
	# print(film)
	else:
		actor = kino.search(message.text, actor=True)
		if actor:
			found = True
			client.send_message(message.chat.id, f"‚óè  –ò–º—è: [{actor['name']}]({actor['posterUrl']})\n‚óè  –§–∏–ª—å–º—ã: {', '.join(actor['films'])}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {actor['kinlink']}",parse_mode='Markdown')

	if not found:
		client.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å!")


print('start')
client.polling(none_stop=True)

"""#bot2"""

import requests
from urllib.parse import urlencode, quote_plus
import telebot
from telebot import types
import pandas as pd
import re
import random





data = pd.read_csv('/content/drive/MyDrive/TELEBOT/kinopoisk-top250.csv', sep=',')
#client = telebot.TeleBot('5294600538:AAGOtmbhU-vE0Of-RW1EyA8UnraQfgPVPwk')
#client = telebot.TeleBot('5126685086:AAGf6kEigUgt-Vf8ZsMW0L6VW-h_KUtgAPg')
client = telebot.TeleBot('5313478178:AAGXKypiaFEg-2yN0oSdOnmk7oWO08wVW0A')



qq='üé¨ –ö–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã –Ω–∞ ¬´–ö–∏–Ω–æ–ü–æ–∏—Å–∫–µ¬ª\n1Ô∏è‚É£ –ó–∞—Ö–æ–¥–∏–º –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç ¬´–ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞¬ª.\n2Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n3Ô∏è‚É£ –ü–æ—Å–ª–µ ¬´www.¬ª –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –º–µ–Ω—è–µ–º "kino" –Ω–∞ "ss".\n‚îî–î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è —Ç–∞–∫ ‚Äî ¬´sspoisk¬ª.\n4Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ –∞–¥—Ä–µ—Å—É ‚Üí –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–µ—Ä.'

kino = Kinopoisk('4161ef6d-9f70-4103-918e-84efc60ec86e')


def clear_msg(text):
	text = text.replace(' ', '').lower()
	text = text.replace(';', '')
	text = text.replace(',', '')
	text = text.replace('—ë', '–µ')
	text = text.replace('–Å', '–µ')
	return text

def clean_link(link):
	link = link.replace("'", '')
	return link

#                                                 –ü–†–ò–í–ï–¢–°–¢–í–ò–ï+–î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–ù–û–ü–û–ö

@client.message_handler(func=lambda c: c.text == '/start')
def start(message):
	mess = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?!'
	client.send_message(message.chat.id, mess, parse_mode='html')
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	btn_start = types.InlineKeyboardButton('/start')
	btn_movie_ser = types.InlineKeyboardButton('–§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª')
	btn_rnd_movie = types.InlineKeyboardButton('C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª')
	btn_rnd_actor = types.InlineKeyboardButton('C–ª—É—á–∞–π–Ω—ã–π –∞–∫—Ç–µ—Ä')
	btn_actor = types.InlineKeyboardButton('–ê–∫—Ç–µ—Ä')
	KPoisk = types.InlineKeyboardButton('–ö–∞–∫ —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª—Ç–∞–Ω–æ?')
	#autor = types.InlineKeyboardButton('–ê–≤—Ç–æ—Ä—ã')
	markup.add(btn_movie_ser, btn_actor)
	markup.add(btn_rnd_movie, btn_rnd_actor)
	#markup.add(aautor)
	markup.row(KPoisk)
	#client.send_message(message.chat.id, 'üëã', reply_markup=markup)
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEuSVif7lG5qHSnR3-OxoDp7_ExQnH9AAChwIAAladvQpC7XQrQFfQkCQE')




#                                                –§–£–ù–ö–¶–ò–Ø(–ö–ù–û–ü–ö–ê) –†–ê–ù–î–û–ú–ù–´–ô –§–ò–õ–¨–ú
@client.message_handler(func=lambda c: c.text == "C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª")
def rand(message):
	name = random.choice(data['movie'])
	for i in range(len(data)):
		if clear_msg(name) == clear_msg(data['movie'][i]):
			client.send_message(message.chat.id,
			                    f"‚óè  –ù–∞–∑–≤–∞–Ω–∏–µ: [{data.loc[i][1].replace(';', ',')}]({clean_link(data.loc[i][9])})\n‚óè  –ì–æ–¥: {data.loc[i][2]}\n‚óè  –°—Ç—Ä–∞–Ω–∞: {data.loc[i][3]}\n‚óè  –†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}\n‚óè  –†–µ–∂–∏—Å—Å–µ—Ä: {data.loc[i][6].replace(';', ',')}\n‚óè  –û–ø–µ—Ä–∞—Ç–æ—Ä: {data.loc[i][7].replace(';', ',')}\n‚óè  –ê–∫—Ç–µ—Ä—ã: {data.loc[i][8].replace(';', ',')}\n‚óè  –û–ø–∏—Å–∞–Ω–∏–µ: {data.loc[i][5].replace(';', '')}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: https://www.kinopoisk.ru/film/{re.sub('[^0-9]', '', data.loc[i][9].replace('_', ' '))[3:]} ",
			                    parse_mode='Markdown')
		# client.send_message(message.chat.id, 'üé¨  –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä: https://www.sspoisk.ru/film/' + (
		# re.findall(r'\d+', data.loc[i][9].replace('_', ' '))[1]) + '/')


                                                             # –†–ê–ù–î–û–ú–ù–´–ï –ê–ö–¢–ï–†–´
@client.message_handler(func=lambda c: c.text == "–ö–∞–∫ —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª—Ç–∞–Ω–æ?")
def kino(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEXjJiSwfIw1ah_TA_UvVJpESIffzeoQACOwMAArVx2gYYSwbSVVPLRCME')      # –ò–°–ü–†–ê–í–¨
	client.send_message(message.chat.id, 'üé¨ *–ö–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã –Ω–∞ ¬´–ö–∏–Ω–æ–ü–æ–∏—Å–∫–µ¬ª*\n\n1Ô∏è‚É£ –ó–∞—Ö–æ–¥–∏–º –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç ¬´–ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞¬ª.\n2Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n3Ô∏è‚É£ –ü–æ—Å–ª–µ ¬´www.¬ª –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –º–µ–Ω—è–µ–º "kino" –Ω–∞ "ss".\n‚îî–î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è —Ç–∞–∫ ‚Äî ¬´sspoisk¬ª.\n4Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ –∞–¥—Ä–µ—Å—É ‚Üí –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–µ—Ä.' , parse_mode = 'Markdown')


@client.message_handler(func=lambda c: c.text == "–§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª")
def film_ser(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYgABYkyX0Kr38I_YdHOwiricZqzI4MoAAvgSAAJCTllKAAFziHtpqojNIwQ')
	client.send_message(message.chat.id, '–ü—Ä–∏–≥–æ—Ç–æ–≤—å –≤–∫—É—Å–Ω—è—à–µ–∫!\n–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞...\n‚¨áÔ∏è‚¨áÔ∏è‚¨á')       # –ò–°–ü–†–ê–í–¨
	#client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYgABYkyX0Kr38I_YdHOwiricZqzI4MoAAvgSAAJCTllKAAFziHtpqojNIwQ')


@client.message_handler(func=lambda c: c.text == "/help")
def help(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEXqhiSxYKOT32r_p8GIlLxTkee_QCQgACJyAAAulVBRjTVPZqymtoFyME')       # –ò–°–ü–†–ê–í–¨ –ò –¢–ï–ö–°–¢ –í –°–¢–†–û–ß–ö–ï 50 –¢–û–ñ–ï –°–ö–û–ü–ò–†–£–ô
	client.send_message(message.chat.id, '–ó–∞–ø—É—Ç–∞–ª–∏—Å—å –≤ –∫–Ω–æ–ø–∫–∞—Ö?\n\n‚óè  –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω!\n‚óè  C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª--–µ—Å–ª–∏ –≤–∞–º –Ω–µ—á–µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è.\n‚óè  –ê–∫—Ç–µ—Ä--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –ê–∫—Ç–µ—Ä–∞/–ê–∫—Ç—Ä–∏—Å—Å—É, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω.\n‚óè  –°–ª—É—á–∞–π–Ω—ã–π –ê–∫—Ç–µ—Ä--–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º –ê–∫—Ç–µ—Ä–æ–º/–ê–∫—Ç—Ä–∏—Å—Å–æ–π, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ñ–∏–ª—å–º—ã —Å –∏—Ö —É—á–∞—Å—Ç–∏–µ–º!\n‚óè  –ê–≤—Ç–æ—Ä—ã--–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –ø–æ–¥–æ–±–Ω—ã–π –±–æ—Ç...')


@client.message_handler(func=lambda c: c.text == "–ê–≤—Ç–æ—Ä—ã")
def author(message):
	client.send_message(message.chat.id, '–ö–æ–º–ø–∞–Ω–∏—è DataNateLab\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å ‚§µ\n@rfs910 –∏–ª–∏ @egorprileppa')


@client.message_handler(func=lambda c: c.text == "C–ª—É—á–∞–π–Ω—ã–π –∞–∫—Ç–µ—Ä")
def acrtist(message):
	st_act = []
	for i in range(len(data)):
		st_act.append(data['actors'][i].split(';'))
	set_actors = list(set([x for l in st_act for x in l]))
	act = random.choice(set_actors)
	actor = f"–§–∏–ª—å–º—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∏–≥—Ä–∞–ª(–∞) {act}\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è"
	client.send_message(message.chat.id, actor, parse_mode='html')
	for i in range(len(data)):
		if clear_msg(act) in clear_msg(data['actors'][i]):
			client.send_message(message.chat.id,
			                    f"–ù–∞–∑–≤–∞–Ω–∏–µ: {data.loc[i][1].replace(';', ',')}\n–†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}")


@client.message_handler(func=lambda c: c.text == "–ê–∫—Ç–µ—Ä")
def acrtist__1(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYadiTH_B6nbGGJCzxkPXPqbSlieFxgACQQIAAs4XpwuAhLkjXAPfNSME')
	what_actor = '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∞–∫—Ç–µ—Ä–∞/–∞–∫—Ç—Ä–∏—Å—ã...\n‚¨áÔ∏è‚¨áÔ∏è‚¨á'
	client.send_message(message.chat.id, what_actor, parse_mode='html')


#                                                         –†–ê–°–ü–û–ó–ù–û–í–ê–ù–ò–ï –§–ò–õ–¨–ú–û–í

@client.message_handler(content_types=["text"])
def start(message):
	found = False
	kino = Kinopoisk('4161ef6d-9f70-4103-918e-84efc60ec86e')
	film = kino.search(message.text)
	print('film', film)

	if film and film['count']:
		found = True
		client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEbrdiUv_CNui9QB_oX7uh6ZK4IwABhdIAAicAAyBHKxQLt5zWb8ZYwSME')
		#client.send_message(message.chat.id, '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫...')
		client.send_message(message.chat.id,
		                    f"‚óè  –ù–∞–∑–≤–∞–Ω–∏–µ: [{film['name']}]({film['photo']})\n‚óè  –ì–æ–¥: {film['year']}\n‚óè  –°—Ç—Ä–∞–Ω–∞: {', '.join(film['country'])}\n‚óè  –†–µ–π—Ç–∏–Ω–≥: {film['rating']}\n‚óè  –†–µ–∂–∏—Å—Å–µ—Ä: {film['director']}\n‚óè  –ê–∫—Ç–µ—Ä—ã: {', '.join(film['actors'])}\n‚óè  –û–ø–∏—Å–∞–Ω–∏–µ: {film['description']}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {film['link']}",
		                    parse_mode='Markdown')
	# print(*film['actors'],sep=', ')
	# print(film)
	else:
		actor = kino.search(message.text, actor=True)
		print('actor', actor)
		if actor:
			found = True
			client.send_message(message.chat.id, f"‚óè  –ò–º—è: [{actor['name']}]({actor['posterUrl']})\n‚óè  –§–∏–ª—å–º—ã: {', '.join(actor['films'])}",parse_mode='Markdown')     # \n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {actor['kinlink']}

	if not found:
		client.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å!")


print('start')
client.polling(none_stop=True)

import requests
from urllib.parse import urlencode, quote_plus
import telebot
from telebot import types
import pandas as pd
import re
import random

helper = '/start-- –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞\n\n–ö–Ω–æ–ø–∫–∏  ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n‚óè  –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω!\n‚óè  C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª--–µ—Å–ª–∏ –≤–∞–º –Ω–µ—á–µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è\n‚óè  –ê–∫—Ç–µ—Ä--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –ê–∫—Ç–µ—Ä/–ê–∫—Ç—Ä–∏—Å—Å—É, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω\n‚óè  –°–ª—É—á–∞–π–Ω—ã–π –ê–∫—Ç–µ—Ä--–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º –ê–∫—Ç–µ—Ä–æ–º/–ê–∫—Ç—Ä–∏—Å—Å–æ–π, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ñ–∏–ª—å–º—ã —Å –∏—Ö —É—á–∞—Å—Ç–∏–µ–º!'
qq = 'üé¨ *–ö–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã –Ω–∞ ¬´–ö–∏–Ω–æ–ü–æ–∏—Å–∫–µ¬ª*\n\n1Ô∏è‚É£ –ó–∞—Ö–æ–¥–∏–º –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç ¬´–ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞¬ª.\n2Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n3Ô∏è‚É£ –ü–æ—Å–ª–µ ¬´www.¬ª –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –º–µ–Ω—è–µ–º "kino" –Ω–∞ "ss".\n‚îî–î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è —Ç–∞–∫ ‚Äî ¬´sspoisk¬ª.\n4Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ –∞–¥—Ä–µ—Å—É ‚Üí –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–µ—Ä.'

data = pd.read_csv('/content/drive/MyDrive/TELEBOT/kinopoisk-top250.csv', sep=',')
client = telebot.TeleBot('5313478178:AAGXKypiaFEg-2yN0oSdOnmk7oWO08wVW0A')

kino = Kinopoisk('4161ef6d-9f70-4103-918e-84efc60ec86e')

def clear_msg(text):
	text = text.replace(' ', '').lower()
	text = text.replace(';', '')
	text = text.replace(',', '')
	text = text.replace('—ë', '–µ')
	text = text.replace('–Å', '–µ')
	return text


def clean_link(link):
	link = link.replace("'", '')
	return link







#                                                 –ü–†–ò–í–ï–¢–°–¢–í–ò–ï+–î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–ù–û–ü–û–ö

@client.message_handler(func=lambda c: c.text == '/start')
def start(message):
	mess = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?!'
	client.send_message(message.chat.id, mess, parse_mode='html')
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	btn_start = types.InlineKeyboardButton('/start')
	btn_movie_ser = types.InlineKeyboardButton('–§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª')
	btn_rnd_movie = types.InlineKeyboardButton('C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª')
	btn_rnd_actor = types.InlineKeyboardButton('C–ª—É—á–∞–π–Ω—ã–π –∞–∫—Ç–µ—Ä')
	btn_actor = types.InlineKeyboardButton('–ê–∫—Ç–µ—Ä')
	KPoisk = types.InlineKeyboardButton('–ö–∞–∫ —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª—Ç–∞–Ω–æ?')
	autor = types.InlineKeyboardButton('–ê–≤—Ç–æ—Ä—ã')
	FF = types.InlineKeyboardButton('–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ö–∞–Ω–∞–ª —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ @flicksbar ')
	markup.add(btn_movie_ser, btn_actor)
	markup.add(btn_rnd_movie, btn_rnd_actor)
	markup.add(FF)

	markup.row(KPoisk)
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEuSVif7lG5qHSnR3-OxoDp7_ExQnH9AAChwIAAladvQpC7XQrQFfQkCQE')


#                                                –§–£–ù–ö–¶–ò–Ø(–ö–ù–û–ü–ö–ê) –†–ê–ù–î–û–ú–ù–´–ô –§–ò–õ–¨–ú
@client.message_handler(func=lambda c: c.text == "C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª")
def rand(message):
	name = random.choice(data['movie'])
	for i in range(len(data)):
		if clear_msg(name) == clear_msg(data['movie'][i]):
			client.send_message(message.chat.id,
			                    f"‚óè  –ù–∞–∑–≤–∞–Ω–∏–µ: [{data.loc[i][1].replace(';', ',')}]({clean_link(data.loc[i][9])})\n‚óè  –ì–æ–¥: {data.loc[i][2]}\n‚óè  –°—Ç—Ä–∞–Ω–∞: {data.loc[i][3]}\n‚óè  –†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}\n‚óè  –†–µ–∂–∏—Å—Å–µ—Ä: {data.loc[i][6].replace(';', ',')}\n‚óè  –û–ø–µ—Ä–∞—Ç–æ—Ä: {data.loc[i][7].replace(';', ',')}\n‚óè  –ê–∫—Ç–µ—Ä—ã: {data.loc[i][8].replace(';', ',')}\n‚óè  –û–ø–∏—Å–∞–Ω–∏–µ: {data.loc[i][5].replace(';', '')}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: https://www.kinopoisk.ru/film/{re.sub('[^0-9]', '', data.loc[i][9].replace('_', ' '))[3:]} ",
			                    parse_mode='Markdown')
		# client.send_message(message.chat.id, 'üé¨  –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä: https://www.sspoisk.ru/film/' + (
		# re.findall(r'\d+', data.loc[i][9].replace('_', ' '))[1]) + '/')


                                                             # –†–ê–ù–î–û–ú–ù–´–ï –ê–ö–¢–ï–†–´
@client.message_handler(func=lambda c: c.text == "–ö–∞–∫ —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª—Ç–∞–Ω–æ?")
def kino(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEXjJiSwfIw1ah_TA_UvVJpESIffzeoQACOwMAArVx2gYYSwbSVVPLRCME')      # –ò–°–ü–†–ê–í–¨
	client.send_message(message.chat.id, 'üé¨ *–ö–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã –Ω–∞ ¬´–ö–∏–Ω–æ–ü–æ–∏—Å–∫–µ¬ª*\n\n1Ô∏è‚É£ –ó–∞—Ö–æ–¥–∏–º –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç ¬´–ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞¬ª.\n2Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n3Ô∏è‚É£ –ü–æ—Å–ª–µ ¬´www.¬ª –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –º–µ–Ω—è–µ–º "kino" –Ω–∞ "ss".\n‚îî–î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è —Ç–∞–∫ ‚Äî ¬´sspoisk¬ª.\n4Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ –∞–¥—Ä–µ—Å—É ‚Üí –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–µ—Ä.' , parse_mode = 'Markdown')


@client.message_handler(func=lambda c: c.text == "–§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª")
def film_ser(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYgABYkyX0Kr38I_YdHOwiricZqzI4MoAAvgSAAJCTllKAAFziHtpqojNIwQ')
	client.send_message(message.chat.id, '–ü—Ä–∏–≥–æ—Ç–æ–≤—å –≤–∫—É—Å–Ω—è—à–µ–∫!\n–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞...\n‚¨áÔ∏è‚¨áÔ∏è‚¨á')       # –ò–°–ü–†–ê–í–¨
	#client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYgABYkyX0Kr38I_YdHOwiricZqzI4MoAAvgSAAJCTllKAAFziHtpqojNIwQ')


@client.message_handler(func=lambda c: c.text == "/help")
def help(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEXqhiSxYKOT32r_p8GIlLxTkee_QCQgACJyAAAulVBRjTVPZqymtoFyME')       # –ò–°–ü–†–ê–í–¨ –ò –¢–ï–ö–°–¢ –í –°–¢–†–û–ß–ö–ï 50 –¢–û–ñ–ï –°–ö–û–ü–ò–†–£–ô
	client.send_message(message.chat.id, '–ó–∞–ø—É—Ç–∞–ª–∏—Å—å –≤ –∫–Ω–æ–ø–∫–∞—Ö?\n\n‚óè  –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –§–∏–ª—å–º/–°–µ—Ä–∏–∞–ª, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω!\n‚óè  C–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª--–µ—Å–ª–∏ –≤–∞–º –Ω–µ—á–µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è.\n‚óè  –ê–∫—Ç–µ—Ä--–≤—ã–≤–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –ê–∫—Ç–µ—Ä–∞/–ê–∫—Ç—Ä–∏—Å—Å—É, —á—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω.\n‚óè  –°–ª—É—á–∞–π–Ω—ã–π –ê–∫—Ç–µ—Ä--–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º –ê–∫—Ç–µ—Ä–æ–º/–ê–∫—Ç—Ä–∏—Å—Å–æ–π, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π –∏ –∏—â–∏—Ç–µ —Ñ–∏–ª—å–º—ã —Å –∏—Ö —É—á–∞—Å—Ç–∏–µ–º!\n‚óè  –ê–≤—Ç–æ—Ä—ã--–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –ø–æ–¥–æ–±–Ω—ã–π –±–æ—Ç...')


@client.message_handler(func=lambda c: c.text == "–ê–≤—Ç–æ—Ä—ã")
def author(message):
	client.send_message(message.chat.id, '–ö–æ–º–ø–∞–Ω–∏—è DataNateLab\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å ‚§µ\n@rfs910 –∏–ª–∏ @egorprileppa')


@client.message_handler(func=lambda c: c.text == "C–ª—É—á–∞–π–Ω—ã–π –∞–∫—Ç–µ—Ä")
def acrtist(message):
	st_act = []
	for i in range(len(data)):
		st_act.append(data['actors'][i].split(';'))
	set_actors = list(set([x for l in st_act for x in l]))
	act = random.choice(set_actors)
	actor = f"–§–∏–ª—å–º—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∏–≥—Ä–∞–ª(–∞) {act}\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è"
	client.send_message(message.chat.id, actor, parse_mode='html')
	for i in range(len(data)):
		if clear_msg(act) in clear_msg(data['actors'][i]):
			client.send_message(message.chat.id,
			                    f"–ù–∞–∑–≤–∞–Ω–∏–µ: {data.loc[i][1].replace(';', ',')}\n–†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}")


@client.message_handler(func=lambda c: c.text == "–ê–∫—Ç–µ—Ä")
def acrtist__1(message):
	client.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEEYadiTH_B6nbGGJCzxkPXPqbSlieFxgACQQIAAs4XpwuAhLkjXAPfNSME')
	what_actor = '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∞–∫—Ç–µ—Ä–∞/–∞–∫—Ç—Ä–∏—Å—ã...\n‚¨áÔ∏è‚¨áÔ∏è‚¨á'
	client.send_message(message.chat.id, what_actor, parse_mode='html')


#                                                         –†–ê–°–ü–û–ó–ù–û–í–ê–ù–ò–ï –§–ò–õ–¨–ú–û–í

@client.message_handler(content_types=["text"])
def start(message):
	found = False
	kino = Kinopoisk('4161ef6d-9f70-4103-918e-84efc60ec86e')
	film = kino.search(message.text)
	print('film', film)

	if film and film['count']:
		found = True
		client.send_message(message.chat.id, '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫...')
		client.send_message(message.chat.id,
		                    f"‚óè  –ù–∞–∑–≤–∞–Ω–∏–µ: [{film['name']}]({film['photo']})\n‚óè  –ì–æ–¥: {film['year']}\n‚óè  –°—Ç—Ä–∞–Ω–∞: {', '.join(film['country'])}\n‚óè  –†–µ–π—Ç–∏–Ω–≥: {film['rating']}\n‚óè  –†–µ–∂–∏—Å—Å–µ—Ä: {film['director']}\n‚óè  –ê–∫—Ç–µ—Ä—ã: {', '.join(film['actors'])}\n‚óè  –û–ø–∏—Å–∞–Ω–∏–µ: {film['description']}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {film['link']}",
		                    parse_mode='Markdown')
	# print(*film['actors'],sep=', ')
	# print(film)
	else:
		actor = kino.search(message.text, actor=True)
		print('actor', actor)
		if actor:
			found = True
			client.send_message(message.chat.id, f"‚óè  –ò–º—è: [{actor['name']}]({actor['posterUrl']})\n‚óè  –§–∏–ª—å–º—ã: {', '.join(actor['films'])}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: {actor['kinlink']}",parse_mode='Markdown')

	if not found:
		client.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å!")


# for i in range(len(data)):
# 	if clear_msg(message.text) == clear_msg(data['movie'][i]):
# 		found = True
# 		client.send_message(message.chat.id,
# 		                    f"‚óè  –ù–∞–∑–≤–∞–Ω–∏–µ: [{data.loc[i][1].replace(';', ',')}]({clean_link(data.loc[i][9])})\n‚óè  –ì–æ–¥: {data.loc[i][2]}\n‚óè  –°—Ç—Ä–∞–Ω–∞: {data.loc[i][3]}\n‚óè  –†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}\n‚óè  –†–µ–∂–∏—Å—Å–µ—Ä: {data.loc[i][6].replace(';', ',')}\n‚óè  –û–ø–µ—Ä–∞—Ç–æ—Ä: {data.loc[i][7].replace(';', ',')}\n‚óè  –ê–∫—Ç–µ—Ä—ã: {data.loc[i][8].replace(';', ',')}\n‚óè  –û–ø–∏—Å–∞–Ω–∏–µ: {data.loc[i][5].replace(';', '')}\n‚óè  –ö–∏–Ω–æ–ø–æ–∏—Å–∫: https://www.kinopoisk.ru/film/{re.sub('[^0-9]', '', data.loc[i][9].replace('_',' '))[3:]} ",
# 		                    parse_mode='Markdown')
# 		# client.send_message(message.chat.id, 'üé¨  –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä: https://www.sspoisk.ru/film/' + (
# 		# re.findall(r'\d+', data.loc[i][9].replace('_', ' '))[1]) + '/')
#
# 	elif clear_msg(message.text) in clear_msg(data['actors'][i]):
# 		found = True
# 		client.send_message(message.chat.id, f"–ù–∞–∑–≤–∞–Ω–∏–µ: {data.loc[i][1]}\n–†–µ–π—Ç–∏–Ω–≥: {round(data.loc[i][4], 2)}")
#
#
# if not found:
# 	client.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å!")
#
# client.send_message(message.chat.id, 'test')
# print(kino_res)

print('start')
client.polling(none_stop=True)